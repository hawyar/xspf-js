const convert=require("xml-js"),namespace="http://xspf.org/ns/0/",version="1",tokens=["title","creator","annotation","info","location","identifier","image","date","license","attribution","link","meta","extension","duration","trackList","album","trackNum"];function parse(a){if(!a||typeof a!="string")throw new Error("no input");let t={};try{t=convert.xml2js(a,{compact:!1,spaces:4,trim:!0,ignoreComment:!0})}catch(e){throw new Error("invalid xml")}if(!t.hasOwnProperty("declaration"))throw new Error('XML declaration not found: <?xml version="1.0" encoding="UTF-8"?>');if(t.elements.length===0)throw new Error("empty elements");const r=t.elements[0];if(r.name!=="playlist")throw new Error("invalid element");const o=r.attributes;if(o.version!==version)throw new Error(`invalid xspf version: wanted ${version}, got ${o.version}`);if(o.xmlns!==namespace)throw new Error(`invalid xml namespace: wanted ${namespace}, got ${o.namespace}`);let i={version,xmlns:namespace,playlist:{}};return r.elements&&r.elements.forEach(e=>{if(e.type!=="element"){console.warn(`ignoring non-element: ${e.text}`);return}if(tokens.indexOf(e.name)===-1){console.warn(`ignoring invalid token: ${e.name}`);return}if(e.name==="trackList"){const m=e.elements.map(l=>{const s={};return l.elements.forEach(n=>{n.type!=="element"&&console.warn(`ignoring non-element: ${n.text}`),tokens.indexOf(n.name)!==-1&&(s[n.name]=n.elements[0].text)}),s});i.playlist.tracks=m;return}i.playlist[e.name]=e.elements[0].text}),i}module.exports=parse;
